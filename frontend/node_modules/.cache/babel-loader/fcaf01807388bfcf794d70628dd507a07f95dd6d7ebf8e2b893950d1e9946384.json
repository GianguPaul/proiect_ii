{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:4000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Adaugă automat token-ul JWT dacă există\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n/** — Autentificare & Înregistrare — **/\nexport const register = data => api.post(\"/auth/register\", data);\nexport const login = credentials => api.post(\"/auth/login\", credentials);\n\n/** — Users (admin) — **/\nexport const getUsers = () => api.get(\"/users\");\nexport const getUserById = id => api.get(`/users/${id}`);\nexport const createUser = data => api.post(\"/users\", data);\nexport const updateUser = (id, d) => api.put(`/users/${id}`, d);\nexport const deleteUser = id => api.delete(`/users/${id}`);\n\n/** — Produse — **/\nexport const getProducts = () => api.get(\"/products\");\nexport const getProductById = id => api.get(`/products/${id}`);\nexport const createProduct = data => api.post(\"/products\", data);\nexport const updateProduct = (id, d) => api.put(`/products/${id}`, d);\nexport const deleteProduct = id => api.delete(`/products/${id}`);\n\n/** — Comenzi — **/\n// client: propriile comenzi\nexport const getOrdersByUser = userId => api.get(`/orders/user/${userId}`);\n// admin/curier: toate comenzile\nexport const getAllOrders = () => api.get(\"/orders\");\n// creare comandă\nexport const createOrder = order => api.post(\"/orders\", order);\n// actualizare status (PUT)\nexport const updateOrderStatus = (id, st) => api.put(`/orders/${id}/status`, {\n  status: st\n});\n// ștergere comandă\nexport const deleteOrder = id => api.delete(`/orders/${id}`);\n\n// fallback export\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","register","data","post","login","credentials","getUsers","get","getUserById","id","createUser","updateUser","d","put","deleteUser","delete","getProducts","getProductById","createProduct","updateProduct","deleteProduct","getOrdersByUser","userId","getAllOrders","createOrder","order","updateOrderStatus","st","status","deleteOrder"],"sources":["C:/Users/Paul/Documents/GitHub/proiect_ii/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:4000/api\",\r\n  headers: { \"Content-Type\": \"application/json\" }\r\n});\r\n\r\n// Adaugă automat token-ul JWT dacă există\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\n/** — Autentificare & Înregistrare — **/\r\nexport const register    = data        => api.post(\"/auth/register\", data);\r\nexport const login       = credentials => api.post(\"/auth/login\", credentials);\r\n\r\n/** — Users (admin) — **/\r\nexport const getUsers     = ()      => api.get(\"/users\");\r\nexport const getUserById  = id      => api.get(`/users/${id}`);\r\nexport const createUser   = data    => api.post(\"/users\", data);\r\nexport const updateUser   = (id, d) => api.put(`/users/${id}`, d);\r\nexport const deleteUser   = id      => api.delete(`/users/${id}`);\r\n\r\n/** — Produse — **/\r\nexport const getProducts    = ()      => api.get(\"/products\");\r\nexport const getProductById = id      => api.get(`/products/${id}`);\r\nexport const createProduct  = data    => api.post(\"/products\", data);\r\nexport const updateProduct  = (id, d) => api.put(`/products/${id}`, d);\r\nexport const deleteProduct  = id      => api.delete(`/products/${id}`);\r\n\r\n/** — Comenzi — **/\r\n// client: propriile comenzi\r\nexport const getOrdersByUser   = userId => api.get(`/orders/user/${userId}`);\r\n// admin/curier: toate comenzile\r\nexport const getAllOrders      = ()      => api.get(\"/orders\");\r\n// creare comandă\r\nexport const createOrder       = order   => api.post(\"/orders\", order);\r\n// actualizare status (PUT)\r\nexport const updateOrderStatus = (id, st) => api.put(`/orders/${id}/status`, { status: st });\r\n// ștergere comandă\r\nexport const deleteOrder       = id      => api.delete(`/orders/${id}`);\r\n\r\n// fallback export\r\nexport default api;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAC3D,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,QAAQ,GAAMC,IAAI,IAAWb,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;AAC1E,OAAO,MAAME,KAAK,GAASC,WAAW,IAAIhB,GAAG,CAACc,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;;AAE9E;AACA,OAAO,MAAMC,QAAQ,GAAOA,CAAA,KAAWjB,GAAG,CAACkB,GAAG,CAAC,QAAQ,CAAC;AACxD,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAASpB,GAAG,CAACkB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;AAC9D,OAAO,MAAMC,UAAU,GAAKR,IAAI,IAAOb,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;AAC/D,OAAO,MAAMS,UAAU,GAAKA,CAACF,EAAE,EAAEG,CAAC,KAAKvB,GAAG,CAACwB,GAAG,CAAC,UAAUJ,EAAE,EAAE,EAAEG,CAAC,CAAC;AACjE,OAAO,MAAME,UAAU,GAAKL,EAAE,IAASpB,GAAG,CAAC0B,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;;AAEjE;AACA,OAAO,MAAMO,WAAW,GAAMA,CAAA,KAAW3B,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;AAC7D,OAAO,MAAMU,cAAc,GAAGR,EAAE,IAASpB,GAAG,CAACkB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;AACnE,OAAO,MAAMS,aAAa,GAAIhB,IAAI,IAAOb,GAAG,CAACc,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACpE,OAAO,MAAMiB,aAAa,GAAIA,CAACV,EAAE,EAAEG,CAAC,KAAKvB,GAAG,CAACwB,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEG,CAAC,CAAC;AACtE,OAAO,MAAMQ,aAAa,GAAIX,EAAE,IAASpB,GAAG,CAAC0B,MAAM,CAAC,aAAaN,EAAE,EAAE,CAAC;;AAEtE;AACA;AACA,OAAO,MAAMY,eAAe,GAAKC,MAAM,IAAIjC,GAAG,CAACkB,GAAG,CAAC,gBAAgBe,MAAM,EAAE,CAAC;AAC5E;AACA,OAAO,MAAMC,YAAY,GAAQA,CAAA,KAAWlC,GAAG,CAACkB,GAAG,CAAC,SAAS,CAAC;AAC9D;AACA,OAAO,MAAMiB,WAAW,GAASC,KAAK,IAAMpC,GAAG,CAACc,IAAI,CAAC,SAAS,EAAEsB,KAAK,CAAC;AACtE;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACjB,EAAE,EAAEkB,EAAE,KAAKtC,GAAG,CAACwB,GAAG,CAAC,WAAWJ,EAAE,SAAS,EAAE;EAAEmB,MAAM,EAAED;AAAG,CAAC,CAAC;AAC5F;AACA,OAAO,MAAME,WAAW,GAASpB,EAAE,IAASpB,GAAG,CAAC0B,MAAM,CAAC,WAAWN,EAAE,EAAE,CAAC;;AAEvE;AACA,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}