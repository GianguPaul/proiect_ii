{"ast":null,"code":"// frontend/src/services/api.js\n\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:4000/api\"\n});\n\n// Interceptor pentru JWT\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n// — Autentificare & Înregistrare —\nexport const register = data => api.post(\"/auth/register\", data);\nexport const login = credentials => api.post(\"/auth/login\", credentials);\n\n// — Users (admin only) —\nexport const getUsers = () => api.get(\"/users\");\nexport const getUserById = id => api.get(`/users/${id}`);\nexport const updateUser = (id, data) => api.put(`/users/${id}`, data);\nexport const deleteUser = id => api.delete(`/users/${id}`);\n\n// — Produse —\nexport const getProducts = () => api.get(\"/products\");\nexport const getProductById = id => api.get(`/products/${id}`);\nexport const createProduct = data => api.post(\"/products\", data);\nexport const updateProduct = (id, data) => api.put(`/products/${id}`, data);\nexport const deleteProduct = id => api.delete(`/products/${id}`);\n\n// — Comenzi —\n// Pentru client: comenzi proprii\nexport const getOrdersByUser = userId => api.get(`/orders/user/${userId}`);\n// Pentru admin/curier: toate comenzile\nexport const getAllOrders = () => api.get(\"/orders\");\n// Creează o comandă\nexport const createOrder = order => api.post(\"/orders\", order);\n// Actualizează status (admin/curier)\nexport const updateOrderStatus = (id, status) => api.put(`/orders/${id}/status`, {\n  status\n});\n// Șterge o comandă\nexport const deleteOrder = id => api.delete(`/orders/${id}`);\n\n// Export default pentru cazuri particulare\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","register","data","post","login","credentials","getUsers","get","getUserById","id","updateUser","put","deleteUser","delete","getProducts","getProductById","createProduct","updateProduct","deleteProduct","getOrdersByUser","userId","getAllOrders","createOrder","order","updateOrderStatus","status","deleteOrder"],"sources":["C:/Users/Paul/Documents/GitHub/proiect_ii/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\n\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:4000/api\",\n});\n\n// Interceptor pentru JWT\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n// — Autentificare & Înregistrare —\nexport const register = (data) => api.post(\"/auth/register\", data);\nexport const login    = (credentials) => api.post(\"/auth/login\", credentials);\n\n// — Users (admin only) —\nexport const getUsers     = () => api.get(\"/users\");\nexport const getUserById  = (id) => api.get(`/users/${id}`);\nexport const updateUser   = (id, data) => api.put(`/users/${id}`, data);\nexport const deleteUser   = (id) => api.delete(`/users/${id}`);\n\n// — Produse —\nexport const getProducts     = () => api.get(\"/products\");\nexport const getProductById  = (id) => api.get(`/products/${id}`);\nexport const createProduct   = (data) => api.post(\"/products\", data);\nexport const updateProduct   = (id, data) => api.put(`/products/${id}`, data);\nexport const deleteProduct   = (id) => api.delete(`/products/${id}`);\n\n// — Comenzi —\n// Pentru client: comenzi proprii\nexport const getOrdersByUser = (userId) => api.get(`/orders/user/${userId}`);\n// Pentru admin/curier: toate comenzile\nexport const getAllOrders    = () => api.get(\"/orders\");\n// Creează o comandă\nexport const createOrder     = (order) => api.post(\"/orders\", order);\n// Actualizează status (admin/curier)\nexport const updateOrderStatus = (id, status) =>\n  api.put(`/orders/${id}/status`, { status });\n// Șterge o comandă\nexport const deleteOrder     = (id) => api.delete(`/orders/${id}`);\n\n// Export default pentru cazuri particulare\nexport default api;\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAC3D,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,QAAQ,GAAIC,IAAI,IAAKb,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;AAClE,OAAO,MAAME,KAAK,GAAOC,WAAW,IAAKhB,GAAG,CAACc,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;;AAE7E;AACA,OAAO,MAAMC,QAAQ,GAAOA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,QAAQ,CAAC;AACnD,OAAO,MAAMC,WAAW,GAAKC,EAAE,IAAKpB,GAAG,CAACkB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;AAC3D,OAAO,MAAMC,UAAU,GAAKA,CAACD,EAAE,EAAEP,IAAI,KAAKb,GAAG,CAACsB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAEP,IAAI,CAAC;AACvE,OAAO,MAAMU,UAAU,GAAMH,EAAE,IAAKpB,GAAG,CAACwB,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC;;AAE9D;AACA,OAAO,MAAMK,WAAW,GAAOA,CAAA,KAAMzB,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;AACzD,OAAO,MAAMQ,cAAc,GAAKN,EAAE,IAAKpB,GAAG,CAACkB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;AACjE,OAAO,MAAMO,aAAa,GAAMd,IAAI,IAAKb,GAAG,CAACc,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACpE,OAAO,MAAMe,aAAa,GAAKA,CAACR,EAAE,EAAEP,IAAI,KAAKb,GAAG,CAACsB,GAAG,CAAC,aAAaF,EAAE,EAAE,EAAEP,IAAI,CAAC;AAC7E,OAAO,MAAMgB,aAAa,GAAMT,EAAE,IAAKpB,GAAG,CAACwB,MAAM,CAAC,aAAaJ,EAAE,EAAE,CAAC;;AAEpE;AACA;AACA,OAAO,MAAMU,eAAe,GAAIC,MAAM,IAAK/B,GAAG,CAACkB,GAAG,CAAC,gBAAgBa,MAAM,EAAE,CAAC;AAC5E;AACA,OAAO,MAAMC,YAAY,GAAMA,CAAA,KAAMhC,GAAG,CAACkB,GAAG,CAAC,SAAS,CAAC;AACvD;AACA,OAAO,MAAMe,WAAW,GAAQC,KAAK,IAAKlC,GAAG,CAACc,IAAI,CAAC,SAAS,EAAEoB,KAAK,CAAC;AACpE;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACf,EAAE,EAAEgB,MAAM,KAC1CpC,GAAG,CAACsB,GAAG,CAAC,WAAWF,EAAE,SAAS,EAAE;EAAEgB;AAAO,CAAC,CAAC;AAC7C;AACA,OAAO,MAAMC,WAAW,GAAQjB,EAAE,IAAKpB,GAAG,CAACwB,MAAM,CAAC,WAAWJ,EAAE,EAAE,CAAC;;AAElE;AACA,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}